import{_ as l,o as i,c as e,Q as t}from"./chunks/framework.caffda30.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"jx/0-目标.md","filePath":"jx/0-目标.md","lastUpdated":1708532186000}'),o={name:"jx/0-目标.md"},s=t("<p><strong>包含知识点</strong></p><ol><li>git操作：push pull 提pr</li><li>vue+ts项目搭建 原型设计</li><li>登录验证：dom操作 分层</li><li>vue3基础：组件开发 props inject</li><li>使用vue-router+layout处理路由</li><li>使用elementUI构建页面</li><li>使用promise+axios完成登录</li><li>使用node简单地构建server</li><li>使用pinia管理状态</li><li>使用node完成JWT</li><li>使用node做中间层</li><li>前后联调处理复杂逻辑</li></ol><p>可能添加的：</p><ol><li>node层构建简单的后台管理界面</li><li>简单的函数式编程</li></ol><p><strong>原则</strong></p><ol><li>DRY（Don&#39;t Repeat Yourself）原则： 避免重复的代码，使用函数、模块和类等封装可复用的代码片段。 提倡模块化思维，将代码分解为可维护、可测试的小块。</li><li>KISS（Keep It Simple, Stupid）原则： 保持代码简单易懂，避免不必要的复杂性。 尽量使用直观的命名和结构，降低代码的认知负担。</li></ol><p><strong>流程</strong></p><ol><li>知识点讲解,大致思路,先自己写,push</li><li>批改,修正,push,合并</li></ol>",8),p=[s];function r(n,_,a,d,c,u){return i(),e("div",null,p)}const h=l(o,[["render",r]]);export{f as __pageData,h as default};
