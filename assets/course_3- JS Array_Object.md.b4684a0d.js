import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.e5c343f4.js";const p="/assets/image-20240216151856354.221381cd.png",o="/assets/image-20240216193403896.3afafd32.png",A=JSON.parse('{"title":"JavaScript重点内容","description":"","frontmatter":{},"headers":[],"relativePath":"course/3- JS Array+Object.md","filePath":"course/3- JS Array+Object.md"}'),e={name:"course/3- JS Array+Object.md"},c=l(`<h1 id="javascript重点内容" tabindex="-1">JavaScript重点内容 <a class="header-anchor" href="#javascript重点内容" aria-label="Permalink to &quot;JavaScript重点内容&quot;">​</a></h1><h2 id="基础补充" tabindex="-1">基础补充 <a class="header-anchor" href="#基础补充" aria-label="Permalink to &quot;基础补充&quot;">​</a></h2><h3 id="var-let-const用哪个" tabindex="-1">var let const用哪个 <a class="header-anchor" href="#var-let-const用哪个" aria-label="Permalink to &quot;var let const用哪个&quot;">​</a></h3><p>所有不会改变的常量用const。</p><p>会改变的变量用let。在实际项目中可能比const少得多。</p><p>var的历史遗留问题过多，禁用var。</p><h3 id="相等与全等" tabindex="-1">相等与全等 <a class="header-anchor" href="#相等与全等" aria-label="Permalink to &quot;相等与全等&quot;">​</a></h3><p>===：判断值相等的同时判断类型是否相等。</p><p>== ：判断值是否相等，如果类型不同则转换为相同类型再判断。</p><p>比赛时建议使用==，因为不用考虑可维护性，全等反而容易给自己挖坑。</p><blockquote><p>以下判断都为true:</p><p>[] == false 0 == !!0 null == undefined</p><p>如果替换为===，则都为false。</p></blockquote><p>在一些框架中，为了更加严谨，会使用Object.is来替代===。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Object.</span><span style="color:#B392F0;">is</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;foo&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bar&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Object.</span><span style="color:#6F42C1;">is</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;foo&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bar&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span></code></pre></div><h3 id="链式赋值" tabindex="-1">链式赋值 <a class="header-anchor" href="#链式赋值" aria-label="Permalink to &quot;链式赋值&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> b;</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 也可以加上括号</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> b;</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 也可以加上括号</span></span></code></pre></div><p>这里的链式赋值意味着首先将1赋给变量b，然后将b的值再赋给变量a。因此，a和b最终都被赋值为1。</p><p>在while里面使用：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> stack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> curr;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (curr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> stack.</span><span style="color:#B392F0;">shift</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(curr);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#6A737D;">//此时修改shift为pop，就能实现逆序。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> stack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> curr;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (curr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> stack.</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(curr);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#6A737D;">//此时修改shift为pop，就能实现逆序。</span></span></code></pre></div><h3 id="短路运算" tabindex="-1">短路运算 <a class="header-anchor" href="#短路运算" aria-label="Permalink to &quot;短路运算&quot;">​</a></h3><p>在逻辑运算中，我们常用与和或两个运算符：</p><ul><li><p>a || b，只要a和b其中一个为true，则整个表达式的运算结果为true。</p></li><li><p>a &amp;&amp; b，只有所有a和b都为true，则整个表达式的运算结果才为true。</p></li></ul><p>在短路运算中：</p><ul><li><p>a || b，如果a为false，才走b，否则不走b。</p></li><li><p>a &amp;&amp; b，只有a为true，才走b，否则不走b。</p></li></ul><p>以下是两种及其常见的场景：</p><p>用于赋值：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">//可能返回空</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> [];  </span><span style="color:#6A737D;">//如果res是null、undefined就会被转为false，取后面的值，也就是把[]赋给result</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//可能返回空</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> [];  </span><span style="color:#6A737D;">//如果res是null、undefined就会被转为false，取后面的值，也就是把[]赋给result</span></span></code></pre></div><p>用于表达式执行：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> shouldShow </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">shouldShow </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(xxx); </span><span style="color:#6A737D;">//如果shouldShow为true，才执行后面的语句。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> shouldShow </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">shouldShow </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(xxx); </span><span style="color:#6A737D;">//如果shouldShow为true，才执行后面的语句。</span></span></code></pre></div><h3 id="类型转换" tabindex="-1">类型转换 <a class="header-anchor" href="#类型转换" aria-label="Permalink to &quot;类型转换&quot;">​</a></h3><p>数字 =&gt; 字符串：1+&quot;&quot; =&gt; &quot;1&quot;</p><p>字符串 =&gt; 数字：+&quot;1&quot; =&gt; 1</p><p>数字/字符串 =&gt; 布尔值：!!0 =&gt; false; !!&quot;1&quot; =&gt; true</p><p>注意，两个不同类型的数据相加时，会优先以字符串类型为准，其次是数字类型。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;abc&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 1abc</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 2</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">{})</span></span>
<span class="line"><span style="color:#6A737D;">// 1[object Object]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;abc&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 1abc</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 2</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">{})</span></span>
<span class="line"><span style="color:#6A737D;">// 1[object Object]</span></span></code></pre></div><h2 id="array数组" tabindex="-1">Array数组 <a class="header-anchor" href="#array数组" aria-label="Permalink to &quot;Array数组&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 以此方式声明一个空数组。</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">arr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#6A737D;">// 声明一个长度为5的数组。</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">arr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 声明一个长度为5值都为1的数组。</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">arr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 以此方式声明一个空数组。</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#6A737D;">// 声明一个长度为5的数组。</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 声明一个长度为5值都为1的数组。</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">arr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span></code></pre></div><p>方法概览：</p><p><img src="`+p+'" alt="image-20240216151856354"></p><h2 id="string" tabindex="-1">String <a class="header-anchor" href="#string" aria-label="Permalink to &quot;String&quot;">​</a></h2><p>split join</p><p>replace replaceAll</p><p>indexOf lastIndexOf</p><h2 id="array" tabindex="-1">Array <a class="header-anchor" href="#array" aria-label="Permalink to &quot;Array&quot;">​</a></h2><p>常用方法</p><p>改变数组本身：</p><p>push pop unshift shift</p><p>reverse sort splice</p><p>不改变：</p><p>concat join slice indexOf</p><p>遍历：</p><p>forEach map filter</p><p>every some</p><p>find reduce</p><p>includes</p><p>for...in（不建议） for ... of</p><p>更推荐使用不改变本身的</p><p>数组中添加元素：</p><ol><li>使用...扩展运算符</li><li>push</li></ol><p>删除元素：</p><p>splice</p><p>filter((item)=&gt;item.id!== del_id)</p><h3 id="object" tabindex="-1">Object <a class="header-anchor" href="#object" aria-label="Permalink to &quot;Object&quot;">​</a></h3><p>键值对 动态属性静态属性</p><p>const person = { first: &#39;Albert&#39;, last: &#39;Einstein&#39;, year: 1879, passed: 1955 };</p><p>有顺序不靠谱</p><p>解构[]和{}</p><p><img src="'+o+`" alt="image-20240216193403896"></p><p>取值：person.first person[year]</p><p>遍历</p><p>keys() values() entries()</p><p>for...in</p><p>mdn推荐你for in用在对象，for of用在数组</p><p>for (const [key, value] of Object.entries(userList)) {</p><p>应用</p><p>assign批量修改css值</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">el.style.visibility </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;visible&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 一个一个写太麻烦</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	Object.</span><span style="color:#B392F0;">assign</span><span style="color:#E1E4E8;">(el.style, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        visibility: </span><span style="color:#9ECBFF;">&#39;visible&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        position: </span><span style="color:#9ECBFF;">&#39;initial&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        height: </span><span style="color:#9ECBFF;">&#39;auto&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#6A737D;">// 优雅</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">el.style.visibility </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;visible&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 一个一个写太麻烦</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	Object.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">(el.style, {</span></span>
<span class="line"><span style="color:#24292E;">        visibility: </span><span style="color:#032F62;">&#39;visible&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        position: </span><span style="color:#032F62;">&#39;initial&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        height: </span><span style="color:#032F62;">&#39;auto&#39;</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#6A737D;">// 优雅</span></span></code></pre></div><p>以对象审视数组：数组本质是对象。比较</p><p>增删改查</p><p>遍历</p><p>复制</p><p>练习</p><h3 id="数组常用方法" tabindex="-1">数组常用方法 <a class="header-anchor" href="#数组常用方法" aria-label="Permalink to &quot;数组常用方法&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">inventors</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Albert&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Einstein&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1879</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1955</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Isaac&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Newton&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1643</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1727</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Galileo&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Galilei&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1564</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1642</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Marie&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Curie&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1867</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1934</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Johannes&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Kepler&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1571</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1630</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Nicolaus&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Copernicus&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1463</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1543</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Max&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Planck&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1858</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1947</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Katherine&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Blodgett&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1898</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1979</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Ada&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Lovelace&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1768</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1852</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Sarah E.&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Goode&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1855</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1905</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Lise&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Meitner&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1878</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1968</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  { first: </span><span style="color:#9ECBFF;">&#39;Hanna&#39;</span><span style="color:#E1E4E8;">, last: </span><span style="color:#9ECBFF;">&#39;Hammarström&#39;</span><span style="color:#E1E4E8;">, year: </span><span style="color:#79B8FF;">1829</span><span style="color:#E1E4E8;">, passed: </span><span style="color:#79B8FF;">1909</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">inventors</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Albert&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Einstein&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1879</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1955</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Isaac&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Newton&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1643</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1727</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Galileo&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Galilei&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1564</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1642</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Marie&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Curie&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1867</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1934</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Johannes&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Kepler&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1571</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1630</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Nicolaus&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Copernicus&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1463</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1543</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Max&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Planck&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1858</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1947</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Katherine&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Blodgett&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1898</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1979</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Ada&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Lovelace&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1768</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1852</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Sarah E.&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Goode&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1855</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1905</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Lise&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Meitner&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1878</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1968</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { first: </span><span style="color:#032F62;">&#39;Hanna&#39;</span><span style="color:#24292E;">, last: </span><span style="color:#032F62;">&#39;Hammarström&#39;</span><span style="color:#24292E;">, year: </span><span style="color:#005CC5;">1829</span><span style="color:#24292E;">, passed: </span><span style="color:#005CC5;">1909</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre></div><p>设计函数，输入inventors，返回值是：</p><ol><li><p>过滤出1800年后出生的人</p></li><li><p>所有人全名的集合</p></li><li><p>返回Ada和Lise被删除了的数组 (不允许改变原数组)</p></li><li><p>出生年份正序作为新顺序 (不允许改变原数组)</p></li><li><p>统计出1900年前死的人数</p></li><li><p>他们所有人寿命的平均值</p></li><li><p>把生于1800年后的人和前的人分类,返回一个新对象，形如</p><p>{</p><p>&quot;&lt;1800&quot;: [ ],</p><p>&quot;&gt;=1800&quot;: [ ]</p><p>}</p></li><li><p>按寿命归类，返回寿命为key，对应人的数组为值的对象</p></li><li><p>输入一个字符串，实现人名搜索功能，返回所有包含该字符串的对象</p></li><li><p>输入一个字符串，实现字符搜索功能（输入数字也会匹配出生死亡的年份），返回所有包含字符串的对象</p></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 1. 过滤出1800年后出生的人</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">p1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> p.year </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1800</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(p1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 2. 所有人全名的集合</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">p2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\` \${</span><span style="color:#E1E4E8;">p</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">first</span><span style="color:#9ECBFF;">} \${</span><span style="color:#E1E4E8;">p</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">last</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// const p2 = inventors.map(({ first , last }) =&gt; \` \${first} \${last}\`);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(p2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 3. 返回Ada和Lise被删除了的数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">p3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;Ada&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;Lise&#39;</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(p.first));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(p3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 4. 出生年份正序作为新顺序</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">p4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">inventors].</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> a.year </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> b.year);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//sort是破坏性的，所以要复制一个新的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(p4);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 5. 统计出1900年前死的人数</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">num</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">total</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (p.passed </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1900</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            total</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> total;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(num);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 6. 他们所有人寿命的平均值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">num1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">total</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> total </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (p.passed </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> p.year);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">avg</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> num1 </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(avg);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 7. 把生于1800年后的人和前的人分类, 返回一个新对象，形如</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//     &quot;&lt;1800&quot;: [],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//         &quot;&gt;=1800&quot;: []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&lt;1800&quot;</span><span style="color:#E1E4E8;">: [],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&gt;=1800&quot;</span><span style="color:#E1E4E8;">: []</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">    inventors.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (p.year </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1800</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            result[</span><span style="color:#9ECBFF;">&#39;&lt;1800&#39;</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(p);</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (p.year </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1800</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            result[</span><span style="color:#9ECBFF;">&#39;&gt;=1800&#39;</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(p);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 8. 按寿命归类，返回寿命为key，对应人的数组为值的对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">p8</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">age</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> p.passed </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> p.year;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">result[age]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            result[age] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        result[age].</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(p);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }, {});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(p8);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 9. 输入一个字符串，实现人名搜索功能，返回所有包含字符串的对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">searchByName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">        inventors.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (p.first.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(name) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> p.last.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(name)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                result.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(p);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">searchByName1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">first</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">last</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> p;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (first.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(name) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> last.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(name)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                result.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(p);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, [])</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">searchByName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;l&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">searchByName1</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;l&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 10. 输入一个字符串，实现字符搜索功能（输入数字也会匹配出生死亡的年份），返回所有包含字符串的对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">searchByString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> inventors.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> isAdded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">val</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> Object.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">(p)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(val).</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(str)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">isAdded) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        result.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(p);</span></span>
<span class="line"><span style="color:#E1E4E8;">                        isAdded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#6A737D;">//如果这个p没有被添加（isAdded == false）, 才添加, 添加后使isAdded为true</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, []);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">table</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">searchByString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;l&#39;</span><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 1. 过滤出1800年后出生的人</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">p1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> p.year </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1800</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(p1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 2. 所有人全名的集合</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">p2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\` \${</span><span style="color:#24292E;">p</span><span style="color:#032F62;">.</span><span style="color:#24292E;">first</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">p</span><span style="color:#032F62;">.</span><span style="color:#24292E;">last</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// const p2 = inventors.map(({ first , last }) =&gt; \` \${first} \${last}\`);</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(p2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 3. 返回Ada和Lise被删除了的数组</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">p3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&#39;Ada&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Lise&#39;</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(p.first));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(p3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 4. 出生年份正序作为新顺序</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">p4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">inventors].</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">((</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> a.year </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> b.year);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//sort是破坏性的，所以要复制一个新的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(p4);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 5. 统计出1900年前死的人数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">num</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">total</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (p.passed </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1900</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            total</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> total;</span></span>
<span class="line"><span style="color:#24292E;">    }, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(num);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 6. 他们所有人寿命的平均值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">num1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">total</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> total </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (p.passed </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> p.year);</span></span>
<span class="line"><span style="color:#24292E;">    }, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">avg</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num1 </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> inventors.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(avg);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 7. 把生于1800年后的人和前的人分类, 返回一个新对象，形如</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//     &quot;&lt;1800&quot;: [],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//         &quot;&gt;=1800&quot;: []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&lt;1800&quot;</span><span style="color:#24292E;">: [],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&gt;=1800&quot;</span><span style="color:#24292E;">: []</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">    inventors.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (p.year </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1800</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            result[</span><span style="color:#032F62;">&#39;&lt;1800&#39;</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(p);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (p.year </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1800</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            result[</span><span style="color:#032F62;">&#39;&gt;=1800&#39;</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(p);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(result);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 8. 按寿命归类，返回寿命为key，对应人的数组为值的对象</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">p8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">result</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">age</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> p.passed </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> p.year;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">result[age]) {</span></span>
<span class="line"><span style="color:#24292E;">            result[age] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        result[age].</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(p);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    }, {});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(p8);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 9. 输入一个字符串，实现人名搜索功能，返回所有包含字符串的对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">searchByName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">        inventors.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (p.first.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(name) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> p.last.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(name)) {</span></span>
<span class="line"><span style="color:#24292E;">                result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(p);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">searchByName1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">result</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">first</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">last</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> p;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (first.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(name) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> last.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(name)) {</span></span>
<span class="line"><span style="color:#24292E;">                result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(p);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">        }, [])</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">searchByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;l&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">searchByName1</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;l&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 10. 输入一个字符串，实现字符搜索功能（输入数字也会匹配出生死亡的年份），返回所有包含字符串的对象</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">searchByString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">str</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> inventors.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">result</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> isAdded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">val</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> Object.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">(p)) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(val).</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(str)) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">isAdded) {</span></span>
<span class="line"><span style="color:#24292E;">                        result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(p);</span></span>
<span class="line"><span style="color:#24292E;">                        isAdded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6A737D;">//如果这个p没有被添加（isAdded == false）, 才添加, 添加后使isAdded为true</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">        }, []);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">table</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">searchByString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;l&#39;</span><span style="color:#24292E;">));</span></span></code></pre></div><h5 id="对象常用方法" tabindex="-1">对象常用方法 <a class="header-anchor" href="#对象常用方法" aria-label="Permalink to &quot;对象常用方法&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">xiaoming</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            name: </span><span style="color:#9ECBFF;">&#39;xiaoming&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            age: </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            gender: </span><span style="color:#9ECBFF;">&#39;male&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            subjects: [</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    name: </span><span style="color:#9ECBFF;">&#39;math&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    teacher: </span><span style="color:#9ECBFF;">&#39;laowang&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    score: </span><span style="color:#79B8FF;">90</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    name: </span><span style="color:#9ECBFF;">&#39;chinese&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    teacher: </span><span style="color:#9ECBFF;">&#39;laoli&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    score: </span><span style="color:#79B8FF;">85</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    name: </span><span style="color:#9ECBFF;">&#39;english&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    teacher: </span><span style="color:#9ECBFF;">&#39;laozhang&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    score: </span><span style="color:#79B8FF;">95</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">            volunteer: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;北京大学&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;清华大学&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;人民大学&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">xiaowang</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            name: </span><span style="color:#9ECBFF;">&#39;xiaowang&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            age: </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            gender: </span><span style="color:#9ECBFF;">&#39;male&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            subjects: [</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    name: </span><span style="color:#9ECBFF;">&#39;math&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    teacher: </span><span style="color:#9ECBFF;">&#39;laowang&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    score: </span><span style="color:#79B8FF;">80</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    name: </span><span style="color:#9ECBFF;">&#39;english&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    teacher: </span><span style="color:#9ECBFF;">&#39;laozhang&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    score: </span><span style="color:#79B8FF;">75</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    name: </span><span style="color:#9ECBFF;">&#39;chinese&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    teacher: </span><span style="color:#9ECBFF;">&#39;laoli&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    score: </span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">            volunteer: {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;北华大学&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;长春大学&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;吉林电子信息学院&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">xiaoming</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            name: </span><span style="color:#032F62;">&#39;xiaoming&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            age: </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            gender: </span><span style="color:#032F62;">&#39;male&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            subjects: [</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&#39;math&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    teacher: </span><span style="color:#032F62;">&#39;laowang&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    score: </span><span style="color:#005CC5;">90</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&#39;chinese&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    teacher: </span><span style="color:#032F62;">&#39;laoli&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    score: </span><span style="color:#005CC5;">85</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&#39;english&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    teacher: </span><span style="color:#032F62;">&#39;laozhang&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    score: </span><span style="color:#005CC5;">95</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">            volunteer: {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;北京大学&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;清华大学&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;人民大学&#39;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">xiaowang</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            name: </span><span style="color:#032F62;">&#39;xiaowang&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            age: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            gender: </span><span style="color:#032F62;">&#39;male&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            subjects: [</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&#39;math&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    teacher: </span><span style="color:#032F62;">&#39;laowang&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    score: </span><span style="color:#005CC5;">80</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&#39;english&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    teacher: </span><span style="color:#032F62;">&#39;laozhang&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    score: </span><span style="color:#005CC5;">75</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                    name: </span><span style="color:#032F62;">&#39;chinese&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    teacher: </span><span style="color:#032F62;">&#39;laoli&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    score: </span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">            volunteer: {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;北华大学&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;长春大学&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;吉林电子信息学院&#39;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span></code></pre></div><p>设计函数，完成以下功能：</p><ol><li><p>将二人志愿合并成一个数组进行打印</p></li><li><p>找出所有xiaoming分数比xiaowang高的科目(string)。注意subjects数组的顺序不一致</p></li><li><p>输入[xiaoming, xiaowang]，如果age&gt;=18，就添加一个属性over18: true，否则添加over18: false</p></li><li><p>输入[xiaoming, xiaowang]，整理数据返回一个新的对象：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">subjects </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            math:{</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaoming:</span><span style="color:#79B8FF;">90</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaowang:</span><span style="color:#79B8FF;">80</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            english:{</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaoming:</span><span style="color:#79B8FF;">95</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaowang:</span><span style="color:#79B8FF;">75</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            chinese:{</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaoming:</span><span style="color:#79B8FF;">85</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaowang:</span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">subjects </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            math:{</span></span>
<span class="line"><span style="color:#24292E;">                xiaoming:</span><span style="color:#005CC5;">90</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                xiaowang:</span><span style="color:#005CC5;">80</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            english:{</span></span>
<span class="line"><span style="color:#24292E;">                xiaoming:</span><span style="color:#005CC5;">95</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                xiaowang:</span><span style="color:#005CC5;">75</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            chinese:{</span></span>
<span class="line"><span style="color:#24292E;">                xiaoming:</span><span style="color:#005CC5;">85</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                xiaowang:</span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span></code></pre></div><ol start="5"><li>如果输入一个相同类型的学生数组，不再明确为上面二人，怎么完成上题</li></ol></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 将二人志愿合并成一个数组进行打印</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">concatVol</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">Object.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">(xiaoming.volunteer),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">Object.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">(xiaowang.volunteer)</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">concatVol</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 找出所有xiaoming分数比xiaowang高的科目(string)。注意subjects数组的顺序不一致</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 老实本分版</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">findHigher</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">xiaoming</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">xiaowang</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">        xiaoming.subjects.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">sub</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">score</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sub;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">another</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> xiaowang.subjects.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">sub</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> sub.name </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> name);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (score </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> another.score) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                result.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">findHigher</span><span style="color:#E1E4E8;">(xiaoming, xiaowang));  </span></span>
<span class="line"><span style="color:#6A737D;">//简洁有力版</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">findHigher1</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">xiaoming</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">xiaowang</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> xiaoming.subjects.</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(({ </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">score</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> score </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> xiaowang.subjects.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(({ </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">score</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">s</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> name).score)</span></span>
<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(({ </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> name)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">findHigher1</span><span style="color:#E1E4E8;">(xiaoming, xiaowang));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 输入[xiaoming, xiaowang]，如果age&gt;=18，就添加一个属性over18: true，否则添加over18: false</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addOver18</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#FFAB70;">arr</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> arr.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">item</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            item[</span><span style="color:#9ECBFF;">&#39;over18&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> item.age </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> item;</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 整理数据返回一个新的对象：</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//        subjects = {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//     math: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//         xiaoming: 90,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//             xiaowang: 80</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//     },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//     english: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//         xiaoming: 95,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//             xiaowang: 75</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//     },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//     chinese: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//         xiaoming: 85,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//             xiaowang: 100</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//     }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">subject</span><span style="color:#E1E4E8;">([</span><span style="color:#FFAB70;">xiaoming</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">xiaowang</span><span style="color:#E1E4E8;">]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">subjects</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> xiaoming.subjects.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">sub</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> sub.name);</span></span>
<span class="line"><span style="color:#E1E4E8;">        subjects.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">sub</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            result[sub] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaoming: xiaoming.subjects.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(({ </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> sub).score,</span></span>
<span class="line"><span style="color:#E1E4E8;">                xiaowang: xiaowang.subjects.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(({ </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> sub).score</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">subject</span><span style="color:#E1E4E8;">([xiaoming, xiaowang]));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//如果输入一个相同类型的学生数组，不再明确为上面二人，怎么完成上题</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">subject1</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">students</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">subjects</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> students.</span><span style="color:#B392F0;">reduce</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">allSubjects</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">student</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> allSubjects.</span><span style="color:#B392F0;">concat</span><span style="color:#E1E4E8;">(student.subjects.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">sub</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> sub.name));</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, []);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        subjects.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">sub</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            students.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">stu</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">result[sub]) result[sub] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">                result[sub][stu.name] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> stu.subjects.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(({ </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> sub).score;</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">subject1</span><span style="color:#E1E4E8;">([xiaoming, xiaowang]));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 将二人志愿合并成一个数组进行打印</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">concatVol</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">Object.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">(xiaoming.volunteer),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">Object.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">(xiaowang.volunteer)</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">concatVol</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 找出所有xiaoming分数比xiaowang高的科目(string)。注意subjects数组的顺序不一致</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 老实本分版</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">findHigher</span><span style="color:#24292E;">(</span><span style="color:#E36209;">xiaoming</span><span style="color:#24292E;">, </span><span style="color:#E36209;">xiaowang</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">        xiaoming.subjects.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">sub</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">name</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">score</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sub;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">another</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> xiaowang.subjects.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">((</span><span style="color:#E36209;">sub</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> sub.name </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> name);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (score </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> another.score) {</span></span>
<span class="line"><span style="color:#24292E;">                result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">findHigher</span><span style="color:#24292E;">(xiaoming, xiaowang));  </span></span>
<span class="line"><span style="color:#6A737D;">//简洁有力版</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">findHigher1</span><span style="color:#24292E;">(</span><span style="color:#E36209;">xiaoming</span><span style="color:#24292E;">, </span><span style="color:#E36209;">xiaowang</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> xiaoming.subjects.</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">score</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> xiaowang.subjects.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;">: </span><span style="color:#E36209;">n</span><span style="color:#24292E;">, </span><span style="color:#E36209;">score</span><span style="color:#24292E;">: </span><span style="color:#E36209;">s</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> name).score)</span></span>
<span class="line"><span style="color:#24292E;">            .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> name)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">findHigher1</span><span style="color:#24292E;">(xiaoming, xiaowang));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 输入[xiaoming, xiaowang]，如果age&gt;=18，就添加一个属性over18: true，否则添加over18: false</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addOver18</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            item[</span><span style="color:#032F62;">&#39;over18&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> item.age </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> item;</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 整理数据返回一个新的对象：</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//        subjects = {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//     math: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//         xiaoming: 90,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//             xiaowang: 80</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//     },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//     english: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//         xiaoming: 95,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//             xiaowang: 75</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//     },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//     chinese: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//         xiaoming: 85,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//             xiaowang: 100</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//     }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">subject</span><span style="color:#24292E;">([</span><span style="color:#E36209;">xiaoming</span><span style="color:#24292E;">, </span><span style="color:#E36209;">xiaowang</span><span style="color:#24292E;">]) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">subjects</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> xiaoming.subjects.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">sub</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> sub.name);</span></span>
<span class="line"><span style="color:#24292E;">        subjects.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">sub</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            result[sub] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                xiaoming: xiaoming.subjects.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> sub).score,</span></span>
<span class="line"><span style="color:#24292E;">                xiaowang: xiaowang.subjects.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> sub).score</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">subject</span><span style="color:#24292E;">([xiaoming, xiaowang]));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//如果输入一个相同类型的学生数组，不再明确为上面二人，怎么完成上题</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">subject1</span><span style="color:#24292E;">(</span><span style="color:#E36209;">students</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">subjects</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> students.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">allSubjects</span><span style="color:#24292E;">, </span><span style="color:#E36209;">student</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> allSubjects.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(student.subjects.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">sub</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> sub.name));</span></span>
<span class="line"><span style="color:#24292E;">        }, []);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        subjects.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">sub</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            students.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">stu</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">result[sub]) result[sub] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">                result[sub][stu.name] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> stu.subjects.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(({ </span><span style="color:#E36209;">name</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> sub).score;</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">subject1</span><span style="color:#24292E;">([xiaoming, xiaowang]));</span></span></code></pre></div><p>理解完这些题之后，就对数组和对象的方法有一个基本的认知了。</p><p>当然，这只是理解。通过后续的学习、自己写项目等过程中反复地使用了之后，才能对他们烂熟于心。</p><p>这是JS最常用最重点的内容，你反而不用担心现在理解的不是很完善会怎么样，因为在以后你还要无数次的使用他们。</p>`,94),t=[c];function r(E,y,i,F,u,C){return n(),a("div",null,t)}const d=s(e,[["render",r]]);export{A as __pageData,d as default};
